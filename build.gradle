plugins {
	id 'signing'
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
	id "io.freefair.lombok" version "8.6"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	jcenter()
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://server.bbkr.space/artifactory/libs-release/" }
	maven {
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		url = "https://jitpack.io/"
		content {
			includeGroup("com.github.MinnDevelopment")
		}
	}
	flatDir {
		dirs 'libs'
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"ztrolix-libs" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

fabricApi {
	configureDataGeneration()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
	modImplementation("maven.modrinth:sodium:${project.sodium_version}")
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	implementation "org.lwjgl:lwjgl:3.3.4"
	implementation "org.lwjgl:lwjgl-glfw:3.3.4"
	implementation "org.lwjgl:lwjgl-opengl:3.3.4"
	include(implementation('club.minnced:discord-rpc-release:v3.4.0'))
	include(implementation("com.github.MinnDevelopment:java-discord-rpc:v2.0.1"))
	include(implementation("com.ztrolix.fakeid1:modmenu-badges-lib:0.0.0"))
	implementation "com.squareup.okhttp3:okhttp:4.9.3"
	compileOnly "org.projectlombok:lombok:${rootProject.lombok_version}"
	annotationProcessor "org.projectlombok:lombok:${rootProject.lombok_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories {

	}
}